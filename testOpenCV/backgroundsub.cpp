//Sample from http://stackoverflow.com/questions/19221877/opencv-how-to-use-createbackgroundsubtractormog

//opencv
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/video/background_segm.hpp>
#include "/usr/include/opencv2/highgui/highgui.hpp"
#include "/usr/include/opencv/cv.hpp"
//C
#include <stdio.h>
//C++
#include <iostream>
#include <sstream>
#include <cmath>

using namespace cv;
using namespace std;

//global variables
Mat frame; //current frame
Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
int keyboard;

void processVideo();

int main(int argc, char* argv[])
{
    //create GUI windows
    namedWindow("FG Mask MOG 2");

    //create Background Subtractor objects 
    pMOG2 = new BackgroundSubtractorMOG2(1000,25,false); //MOG2 approach (int history, float varThreshold, bool bShadowDetection=true )http://docs.opencv.org/2.4/modules/video/doc/motion_analysis_and_object_tracking.html?highlight=backgroundsubtractorMOG2#backgroundsubtractormog2

    processVideo();

    destroyAllWindows();
    return EXIT_SUCCESS;
}

void processVideo() {
    //create the capture object

    VideoCapture capture;
    capture.open("http://192.168.1.60:8080/stream?topic=/image&dummy=param.mjpg");
    capture.set(CV_CAP_PROP_FRAME_WIDTH,840);
    capture.set(CV_CAP_PROP_FRAME_HEIGHT,480);

    if(!capture.isOpened()){
        //error in opening the video input
        exit(EXIT_FAILURE);
    }
    //read input data. ESC or 'q' for quitting
    while(1){
        //read the current frame
        if(!capture.read(frame)) {
            exit(EXIT_FAILURE);
        }

        //update the background model
        pMOG2->operator()(frame, fgMaskMOG2, .1);//(InputArray image, OutputArray fgmask, double learningRate=-1)

        Mat erodeElement = getStructuringElement(MORPH_RECT, Size(2, 2));
        erode(fgMaskMOG2, fgMaskMOG2, erodeElement);
        //dilate with larger element so make sure object is nicely visible
        Mat dilateElement = getStructuringElement(MORPH_RECT, Size(25, 25));
        dilate(fgMaskMOG2, fgMaskMOG2, dilateElement);

        imshow("FG Mask MOG 2", fgMaskMOG2);

        waitKey(1);
    }
    //delete capture object
    capture.release();
}